if File.exists?('user-data') && ARGV[0].eql?('up')
  require 'open-uri'
  require 'yaml'

  # generate a new discovery token during `vagrant up`
  token = open('https://discovery.etcd.io/new').read

  def rand_password_hash()
    %x( docker run -it --rm nccts/secgen rand_hash )
  end

  # no need to retain the randomly generated passwords, since ssh keys will be
  # used for remote login; but these md5-based hashes will be used to override
  # any default passwords for the root and core users
  root_user_password_hash = rand_password_hash()
  core_user_password_hash = rand_password_hash()

  data = YAML::load_file('user-data') #Load
  data['coreos']['etcd']['discovery'] = token #Modify
  data['users'][0]['passwd'] = root_user_password_hash #Modify
  data['users'][1]['passwd'] = core_user_password_hash #Modify
  File.open('user-data', 'r+') {|f| f.write( "#cloud-config\n" + data.to_yaml ) } #Store
end

# coreos-vagrant is configured through a series of configuration options (global
# ruby variables) which are detailed below. To modify these options, first copy
# this file to "config.rb". Then simply uncomment the necessary lines, leaving
# the $, and replace everything after the equals sign...

# Size of the CoreOS cluster created by Vagrant
#$num_instances = 1

# Prefix for vm_name
#$vm_name_prefix = "my-proj-prefix-"

# Official CoreOS channel from which updates should be downloaded
#$update_channel = 'stable'

# Log the serial consoles of CoreOS VMs to log/
# Enable by setting value to true, disable with false
# WARNING: Serial logging is known to result in extremely high CPU usage with
# VirtualBox, so should only be used in debugging situations
#$enable_serial_logging = false

# Enable port forwarding of Docker TCP socket
# Set to the TCP port you want exposed on the *host* machine, default is 2375
# If 2375 is used, Vagrant will auto-increment (e.g. in the case of $num_instances > 1)
# You can then use the docker tool locally by setting the following env var:
#   export DOCKER_HOST='tcp://127.0.0.1:2375'
#$expose_docker_tcp = 2375

# Setting for VirtualBox VMs
#$vb_gui    = false
#$vb_memory = 1024
#$vb_cpus   = 1
